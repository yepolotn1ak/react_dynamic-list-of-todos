{"version":3,"sources":["api.ts","types/Status.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","getFilteredTodos/getFilteredTodos.ts","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Status","TodoList","React","memo","todos","onSelect","selectedTodoId","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","filterParams","setFilterParams","query","status","value","onChange","event","params","target","All","Active","Completed","placeholder","style","pointerEvents","Loader","TodoModal","selectedTodo","useState","user","setUser","userId","useEffect","getUser","catch","Error","href","email","name","App","setTodos","loading","setLoading","setSelectedTodo","filteredTodos","filter","toLowerCase","includes","trim","getFilteredTodos","finally","length","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5674eec8.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum Status {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  onSelect?: (todo: Todo | null) => void,\n  selectedTodoId?: number | undefined,\n};\n\nexport const TodoList: React.FC<Props> = React.memo(({\n  todos,\n  onSelect = () => { },\n  selectedTodoId,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodoId === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">\n              {todo.id}\n            </td>\n\n            {todo.completed ? (\n              <>\n                <td className=\"is-vcentered\">\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                </td>\n              </>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-success': todo.completed,\n                'has-text-danger': !todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  {selectedTodoId === todo.id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n});\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React from 'react';\nimport { Status } from '../../types/Status';\nimport { FilterParams } from '../../types/FilterParams';\n\ntype Props = {\n  filterParams: FilterParams,\n  setFilterParams: React.Dispatch<React.SetStateAction<FilterParams>>,\n};\n\nexport const TodoFilter: React.FC<Props> = React.memo(({\n  filterParams,\n  setFilterParams = () => {},\n}) => {\n  const { query, status } = filterParams;\n\n  const handleChangeStatus = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilterParams(params => ({\n      ...params,\n      status: event.target.value as Status,\n    }));\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFilterParams(params => ({\n      ...params,\n      query: event.target.value,\n    }));\n  };\n\n  const handleResetQuery = () => {\n    setFilterParams(params => ({\n      ...params,\n      query: '',\n    }));\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeStatus}\n          >\n            <option value={Status.All}>All</option>\n            <option value={Status.Active}>Active</option>\n            <option value={Status.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleResetQuery}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  selectedTodo: Todo,\n  onSelect?: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  onSelect = () => {},\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const {\n    id,\n    userId,\n    title,\n    completed,\n  } = selectedTodo;\n\n  useEffect(() => {\n    getUser(userId)\n      .then(setUser)\n      .catch(() => new Error('Failed to install user'));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelect(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { Status } from './types/Status';\nimport { FilterParams } from './types/FilterParams';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getFilteredTodos } from './getFilteredTodos/getFilteredTodos';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filterParams, setFilterParams] = useState<FilterParams>({\n    query: '',\n    status: Status.All,\n  });\n  const filteredTodos = getFilteredTodos(todos, filterParams);\n\n  useEffect(() => {\n    setLoading(true);\n    getTodos()\n      .then(setTodos)\n      .catch(() => new Error('Try again later'))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterParams={filterParams}\n                setFilterParams={setFilterParams}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (\n                <Loader />\n              )}\n\n              {!loading && filteredTodos.length > 0 && (\n                <TodoList\n                  todos={filteredTodos}\n                  onSelect={setSelectedTodo}\n                  selectedTodoId={selectedTodo?.id}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          onSelect={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import { FilterParams } from '../types/FilterParams';\nimport { Status } from '../types/Status';\nimport { Todo } from '../types/Todo';\n\nexport const getFilteredTodos = (\n  todos: Todo[],\n  { query, status }: FilterParams,\n) => {\n  return todos\n    .filter(todo => {\n      return todo.title.toLowerCase().includes(query.trim().toLowerCase());\n    })\n    .filter(({ completed }) => {\n      switch (status) {\n        case Status.Active:\n          return !completed;\n        case Status.Completed:\n          return completed;\n        default:\n          return true;\n      }\n    });\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}